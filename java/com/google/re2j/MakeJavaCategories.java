package com.google.re2j;

import java.io.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 * @author Colin Fleming
 */
public class MakeJavaCategories {

  static abstract class Category {
    final String categoryName;
    final String publishName;

    protected Category(String categoryName, String publishName) {
      this.categoryName = categoryName;
      this.publishName = publishName;
    }

    protected abstract boolean matches(int codePoint);

    public void writeTo(Writer writer) throws IOException {
      List<int[]> ranges = new ArrayList<int[]>();
      int first = -1;

      for (int cp = 0; cp <= Character.MAX_CODE_POINT; cp++) {
        if (matches(cp)) {
          if (first == -1) first = cp;
        } else {
          if (first >= 0) {
            writer.write(String.format("      {0x%05x, 0x%05x, 1},\n", first, cp - 1));
            first = -1;
          }
        }
      }

      if (first >= 0) {
        writer.write(String.format("      {0x%05x, 0x%05x, 1},\n", first, Character.MAX_CODE_POINT));
      }
    }
  }

  public static void main(String[] args) throws IOException {
    List<? extends Category> categories = Arrays.asList(
        new Category("javaJavaIdentifierStart", "JAVA_IDENTIFIER_START") {
          @Override
          protected boolean matches(int codePoint) {
            return Character.isJavaIdentifierStart(codePoint);
          }
        },
        new Category("javaJavaIdentifierPart", "JAVA_IDENTIFIER_PART") {
          @Override
          protected boolean matches(int codePoint) {
            return Character.isJavaIdentifierPart(codePoint);
          }
        });

    Writer writer = new BufferedWriter(new FileWriter("java/com/google/re2j/JavaCategoryTables.java"));
    try {
      writer.write("\npackage com.google.re2j;\n\n");
      writer.write("// AUTOGENERATED by MakeJavaCategories.java - do not modify\n\n");
      writer.write("import java.util.HashMap;\n");
      writer.write("import java.util.Map;\n\n");
      writer.write("class JavaCategoryTables {\n");
      writer.write("  private static Map<String, int[][]> Categories() {\n");
      writer.write("    Map<String, int[][]> map = new HashMap<String, int[][]>();\n");
      for (Category category : categories) {
        writer.write("    map.put(\"" + category.categoryName + "\", " + category.categoryName + ");\n");
      }
      writer.write("    return map;\n");
      writer.write("  }\n\n");
      for (Category category : categories) {
        writer.write("  private static final int[][] " + category.categoryName + " = make" + category.categoryName + "();\n");
        writer.write("  private static int[][] make" + category.categoryName + "() {\n");
        writer.write("    return new int[][] {\n");
        category.writeTo(writer);
        writer.write("    };\n");
        writer.write("  }\n\n");
      }

      writer.write("  static final Map<String, int[][]> CATEGORIES = Categories();\n");
      writer.write("}\n");
    } finally {
      writer.flush();
      writer.close();
    }
  }
}
